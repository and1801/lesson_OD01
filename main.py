# создать переменную для хранения максимального числа в массиве
# перебираем массив через цикл
# сравнение текущего элемента с максимальным значением в переменной
# если текущий элемент больше, чем максимальное значение, то мы заменяем максимальное значение
# возвращаем максимальное значение после окончания цикла

def find_max(list):
    max_number = list[0]
    for i in list:
        if i > max_number:
            max_number = i
    return max_number
numbers = [56, -89, 23, 74, 143, -99]

print(find_max(numbers))


# создать переменную для хранения минксимального числа в массиве
# перебираем массив через цикл
# сравнение текущего элемента с минимальным значением в переменной
# если текущий элемент больше, чем максимальное значение, то мы заменяем минимальное значение
# возвращаем минимальное значение после окончания цикла

def find_min(list):
    min_number = list[0]
    for i in list:
        if i < min_number:
            min_number = i
    return min_number



print(find_min(numbers))

# 5! = 1 * 2 * 3 * 4 * 5 = 120
# сравнение числа с нулем, если число 0, то факториал 0 = 1
# создание переменной для хранения итогового результата
# цикл фор с помощью цикла фор или ренж перебираем список из чисел до нашего числа
# внутри цикла домножаем результатирующую переменную

def fact(number):
    if number == 0:
        return 1
    result = 1
    for i in range(1, number + 1):
        result *= i
    return result

# result = 1*1 = 1
# result = 1*2 = 2
# result = 2*3 = 6
# result = 6*4 = 24
# result = 24*5 = 120

print(fact(7))

# 2 - делится на 1 и 2
# 3 - делится на 1 и 3
# 5 - делится на 1 и 5
# сравнение числа с 1 меньше или равно, если да, то false
# создаем цикл, который перебирает все числа от 2 до квадратного корня числа включительно и проверяем делится ли наше число на какое-то из чисел без остатка

import math

def is_prime(number):
    if number <= 1:
        return False

    for i in range(2, int(math.sqrt(number)) + 1):
        if number % i == 0:
            return False

    return True

print(is_prime(16))